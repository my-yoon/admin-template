{"remainingRequest":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zzou/Documents/project/2020/brabbit-admin-template/src/views/v1.0/sign/Login.vue?vue&type=style&index=0&id=679b749f&lang=scss&scoped=true&","dependencies":[{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/src/views/v1.0/sign/Login.vue","mtime":1591668793129},{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/css-loader/dist/cjs.js","mtime":1583241318330},{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1585275403016},{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/postcss-loader/src/index.js","mtime":1582363962004},{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/sass-loader/dist/cjs.js","mtime":1585306091888},{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1582363961748},{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/vue-loader/lib/index.js","mtime":1585275403016}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9naW4tZm9ybS13cmFwIHsKICAubG9naW4tZm9ybS1yb3cgewogICAgd2lkdGg6IDUwMHB4OwogIH0KfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/v1.0/sign","sourcesContent":["<template>\n  <b-container class=\"content-center min-vh-100 login-form-wrap\">\n    <b-row class=\"login-form-row\">\n      <b-col>\n        <b-card>\n          <b-card-header>\n            <img\n              src=\"@/assets/images/b_rabbit_logo.png\"\n              block\n              class=\"mb-2\"\n              width=\"180\"\n            />\n          </b-card-header>\n          <b-card-body>\n            <b-form>\n              <h2>로그인</h2>\n              <p class=\"text-muted\">계정정보를 입력해 주세요.</p>\n              <c-input\n                ref=\"txtUserId\"\n                v-model=\"userId\"\n                placeholder=\"Username\"\n                autocomplete=\"username email\"\n                autofocus\n              >\n                <template #prepend-content><CIcon name=\"cil-user\"/></template>\n              </c-input>\n              <c-input\n                v-model=\"userPwd\"\n                placeholder=\"Password\"\n                type=\"password\"\n                autocomplete=\"curent-password\"\n                @keypress=\"watchKeyOnPwdTextbox\"\n              >\n                <template #prepend-content><CIcon name=\"cil-lock-locked\"/></template>\n              </c-input>\n              <b-row>\n                <b-col class=\"text-left\">\n                  <b-button\n                    block\n                    size=\"md\"\n                    :disabled=\"_.isEmpty(userId) || _.isEmpty(userPwd)\"\n                    @click=\"doLogin\">Login</b-button>\n                </b-col>\n              </b-row>\n            </b-form>\n          </b-card-body>\n          <b-overlay :show=\"showOverlay\" no-wrap></b-overlay>\n        </b-card>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script lang=\"ts\">\nimport CommonView, { Component, Mixins, Prop, Watch} from '@/views/mixins/CommonView'\nimport CommonEvents from '@/views/mixins/CommonEvents'\nimport CommonModals from '@/views/mixins/CommonModals'\n\n@Component\nexport default class Login extends Mixins(CommonView, CommonEvents, CommonModals ) {\n  userId: string = ''\n  userPwd: string = ''\n  showOverlay: boolean = false\n\n  created () {\n    if(this.isLogin) {\n      this.goToPage('/')\n    }\n  }\n  /**\n   * 로그인\n   */\n  doLogin () {\n    if(this._.isEmpty(this.userId) || this._.isEmpty(this.userPwd)) {\n      this.showAlert('로그인 정보를 입력하십시오.')\n      return \n    }\n    this.showOverlay = true\n    this.loginWithId(this.userId, this.userPwd, (isSuccess: boolean, res: any) => {\n      if( isSuccess ) {\n        this.goToPageWithoutHistory('/')\n      } else {\n        this.showOverlay = false\n        this.showAlert('로그인 정보를 확인하십시오.', '로그인 오류')\n      }\n      \n    })\n  }\n  /**\n   * 비밀번호 인풋박스에 Enter 체크\n   */\n  watchKeyOnPwdTextbox (event: KeyboardEvent) {\n    if(this.isEnterKey(event.keyCode)) {\n      this.doLogin()\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n  .login-form-wrap {\n    .login-form-row {\n      width: 500px;\n    }\n  }\n</style>\n\n"]}]}