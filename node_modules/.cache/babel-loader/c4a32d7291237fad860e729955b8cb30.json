{"remainingRequest":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/babel-loader/lib/index.js!/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/@coreui/utils/src/hex-to-rgba.js","dependencies":[{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/@coreui/utils/src/hex-to-rgba.js","mtime":1591668892260},{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1582363961748},{"path":"/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/babel-loader/lib/index.js","mtime":1585275399303}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CgovKiBlc2xpbnQtZGlzYWJsZSBuby1tYWdpYy1udW1iZXJzICovCnZhciBoZXhUb1JnYmEgPSBmdW5jdGlvbiBoZXhUb1JnYmEoY29sb3IpIHsKICB2YXIgb3BhY2l0eSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMTAwOwoKICBpZiAodHlwZW9mIGNvbG9yID09PSAndW5kZWZpbmVkJykgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSGV4IGNvbG9yIGlzIG5vdCBkZWZpbmVkJyk7CiAgfQoKICB2YXIgaGV4ID0gY29sb3IubWF0Y2goL14jKD86WzAtOWEtZl17M30pezEsMn0kL2kpOwoKICBpZiAoIWhleCkgewogICAgdGhyb3cgbmV3IEVycm9yKCIiLmNvbmNhdChjb2xvciwgIiBpcyBub3QgYSB2YWxpZCBoZXggY29sb3IiKSk7CiAgfQoKICB2YXIgcjsKICB2YXIgZzsKICB2YXIgYjsKCiAgaWYgKGNvbG9yLmxlbmd0aCA9PT0gNykgewogICAgciA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDEsIDMpLCAxNik7CiAgICBnID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMywgNSksIDE2KTsKICAgIGIgPSBwYXJzZUludChjb2xvci5zbGljZSg1LCA3KSwgMTYpOwogIH0gZWxzZSB7CiAgICByID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMSwgMiksIDE2KTsKICAgIGcgPSBwYXJzZUludChjb2xvci5zbGljZSgyLCAzKSwgMTYpOwogICAgYiA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDMsIDUpLCAxNik7CiAgfQoKICByZXR1cm4gInJnYmEoIi5jb25jYXQociwgIiwgIikuY29uY2F0KGcsICIsICIpLmNvbmNhdChiLCAiLCAiKS5jb25jYXQob3BhY2l0eSAvIDEwMCwgIikiKTsKfTsKCmV4cG9ydCBkZWZhdWx0IGhleFRvUmdiYTs="},{"version":3,"sources":["/Users/zzou/Documents/project/2020/brabbit-admin-template/node_modules/@coreui/utils/src/hex-to-rgba.js"],"names":["hexToRgba","color","opacity","TypeError","hex","match","Error","r","g","b","length","parseInt","slice"],"mappings":";;;;;AAAA;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA0B;AAAA,MAAlBC,OAAkB,uEAAR,GAAQ;;AAC1C,MAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC;AAChC,UAAM,IAAIE,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED,MAAMC,GAAG,GAAGH,KAAK,CAACI,KAAN,CAAY,0BAAZ,CAAZ;;AAEA,MAAI,CAACD,GAAL,EAAU;AACR,UAAM,IAAIE,KAAJ,WAAaL,KAAb,+BAAN;AACD;;AAED,MAAIM,CAAJ;AACA,MAAIC,CAAJ;AACA,MAAIC,CAAJ;;AAEA,MAAIR,KAAK,CAACS,MAAN,KAAiB,CAArB,EAAwB;AACtBH,IAAAA,CAAC,GAAGI,QAAQ,CAACV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAZ;AACAJ,IAAAA,CAAC,GAAGG,QAAQ,CAACV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAZ;AACAH,IAAAA,CAAC,GAAGE,QAAQ,CAACV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAZ;AACD,GAJD,MAIO;AACLL,IAAAA,CAAC,GAAGI,QAAQ,CAACV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAZ;AACAJ,IAAAA,CAAC,GAAGG,QAAQ,CAACV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAZ;AACAH,IAAAA,CAAC,GAAGE,QAAQ,CAACV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAZ;AACD;;AAED,wBAAeL,CAAf,eAAqBC,CAArB,eAA2BC,CAA3B,eAAiCP,OAAO,GAAG,GAA3C;AACD,CA1BD;;AA4BA,eAAeF,SAAf","sourcesContent":["/* eslint-disable no-magic-numbers */\r\nconst hexToRgba = (color, opacity = 100) => {\r\n  if (typeof color === 'undefined') {\r\n    throw new TypeError('Hex color is not defined')\r\n  }\r\n\r\n  const hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i)\r\n\r\n  if (!hex) {\r\n    throw new Error(`${color} is not a valid hex color`)\r\n  }\r\n\r\n  let r\r\n  let g\r\n  let b\r\n\r\n  if (color.length === 7) {\r\n    r = parseInt(color.slice(1, 3), 16)\r\n    g = parseInt(color.slice(3, 5), 16)\r\n    b = parseInt(color.slice(5, 7), 16)\r\n  } else {\r\n    r = parseInt(color.slice(1, 2), 16)\r\n    g = parseInt(color.slice(2, 3), 16)\r\n    b = parseInt(color.slice(3, 5), 16)\r\n  }\r\n\r\n  return `rgba(${r}, ${g}, ${b}, ${opacity / 100})`\r\n}\r\n\r\nexport default hexToRgba\r\n"]}]}